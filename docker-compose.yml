version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: backpack-app
    container_name: backpack-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
      - mailhog

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql-backpack
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: backpack_project
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: linux/amd64
    container_name: phpmyadmin_backpack
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-backpack
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8180:80"  # phpMyAdmin on port 8180
    networks:
      - app-network
    depends_on:
      - mysql

  redis:
    image: redis:alpine
    container_name: redis_backpack
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    container_name: mailhog_backpack
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_backpack
    restart: unless-stopped
    ports:
      - "80:80"  # Expose port 80 for backpack.local
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - app
      - phpmyadmin

  node:
    image: node:18
    container_name: node_backpack
    working_dir: /var/www
    volumes:
      - .:/var/www
    ports:
      - "3000:3000"  # Expose Vite dev server
    command: sh -c "npm install && npm run dev"
    networks:
      - app-network
    depends_on:
      - app

volumes:
  mysql-data:
    driver: local

networks:
  app-network:
    driver: bridge
